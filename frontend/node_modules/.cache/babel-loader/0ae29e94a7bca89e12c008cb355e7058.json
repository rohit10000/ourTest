{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system/src/components/Section.js\";\nimport React, { useState } from \"react\";\nimport Subject from \"./Subject\";\nimport \"./Section.css\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Section() {\n  const [state, dispatch] = useStateValue();\n  fetch(`localhost:6000/tests/${state.testId}`).then(res => res.json()).then(data => {\n    dispatch({\n      type: 'UPDATE_TEST_STREAMS',\n      item: data.stream\n    });\n  });\n  const [stream, setStream] = useState([state.testStreamsInfo]);\n\n  const toogleSubject = function (index) {\n    setStream(stream.map((info, i) => {\n      if (i == index) {\n        info.open = !info.open;\n      } else {\n        info.open = false;\n      }\n\n      return info;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, state.testTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subsection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, stream.map((info, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Subject, {\n      info: info,\n      index: i,\n      toggleSubject: toogleSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }));\n  })));\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/rohit/Public/test_system/src/components/Section.js"],"names":["React","useState","Subject","useStateValue","Section","state","dispatch","fetch","testId","then","res","json","data","type","item","stream","setStream","testStreamsInfo","toogleSubject","index","map","info","i","open","testTitle"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,eAAP;AACA,SAAQC,aAAR,QAA4B,iBAA5B;;AAGA,SAASC,OAAT,GAAkB;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,aAAa,EAAvC;AAEAI,EAAAA,KAAK,CAAE,wBAAuBF,KAAK,CAACG,MAAO,EAAtC,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVN,IAAAA,QAAQ,CAAC;AACNO,MAAAA,IAAI,EAAE,qBADA;AAELC,MAAAA,IAAI,EAAEF,IAAI,CAACG;AAFN,KAAD,CAAR;AAIH,GAPL;AASA,QAAM,CAACA,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CACjCI,KAAK,CAACY,eAD2B,CAAD,CAApC;;AAIA,QAAMC,aAAa,GAAG,UAAUC,KAAV,EAAgB;AAClCH,IAAAA,SAAS,CAACD,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAY;AAC7B,UAAGA,CAAC,IAAIH,KAAR,EAAc;AACVE,QAAAA,IAAI,CAACE,IAAL,GAAY,CAACF,IAAI,CAACE,IAAlB;AACH,OAFD,MAGI;AACAF,QAAAA,IAAI,CAACE,IAAL,GAAY,KAAZ;AACH;;AACD,aAAOF,IAAP;AACH,KARS,CAAD,CAAT;AASH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,KAAK,CAACmB,SAAX,CADJ,eAEI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAED,IAAf;AACS,MAAA,KAAK,EAAEC,CADhB;AAES,MAAA,aAAa,EAAIJ,aAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH,GATA,CADL,CAFJ,CADJ;AAiBH;;AACD,eAAed,OAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Subject from \"./Subject\";\nimport \"./Section.css\";\nimport {useStateValue} from \"./StateProvider\";\n\n\nfunction Section(){\n    const [state, dispatch] = useStateValue();\n\n    fetch(`localhost:6000/tests/${state.testId}`)\n        .then(res => res.json())\n        .then(data => {\n            dispatch({\n               type: 'UPDATE_TEST_STREAMS' ,\n                item: data.stream\n            });\n        });\n\n    const [stream, setStream] = useState([\n        state.testStreamsInfo\n    ]);\n\n    const toogleSubject = function (index){\n        setStream(stream.map((info, i) =>{\n            if(i == index){\n                info.open = !info.open\n            }\n            else{\n                info.open = false;\n            }\n            return info;\n        }))\n    };\n\n    return(\n        <div className={\"section\"}>\n            <h1>{state.testTitle}</h1>\n            <div className={\"subsection\"}>\n                {stream.map((info, i) => {\n                    return(\n                        <div>\n                            <Subject info={info}\n                                     index={i}\n                                     toggleSubject = {toogleSubject}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}