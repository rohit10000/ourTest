{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system/src/pages/Section.js\";\nimport React, { useEffect, useState } from \"react\";\nimport SectionCard from \"../components/SectionCard\";\nimport \"./Section.css\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\n\nfunction Section() {\n  const [state, dispatch] = useStateValue();\n  const sections = [[\"Physics\", \"Chemistry\", \"Mathematics\"], [\"Database Management System\", \"Operating System\", \"Computer Networks\", \"Object Oriented Programming\"], [\"Aptitude Ability, English Language\"]];\n  const [stream, setStream] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/tests/${state.testId}`).then(res => res.json()).then(data => {\n      console.log(data);\n      dispatch({\n        type: 'UPDATE_TEST_STREAMS_INFO',\n        item: data.stream\n      });\n      setStream(data.stream);\n    });\n    return () => {};\n  }, []);\n\n  const toggleSubject = function (index, id) {\n    dispatch({\n      type: 'UPDATE_TEST_STREAM_ID',\n      item: id\n    });\n    setStream(stream.map((info, i) => {\n      if (i == index) {\n        info.open = !info.open;\n      } else {\n        info.open = false;\n      }\n\n      return info;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, state.testTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subsection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, sections[state.testId].map((name, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SectionCard, {\n      index: i,\n      toggleSubject: toggleSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }));\n  })));\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/rohit/Public/test_system/src/pages/Section.js"],"names":["React","useEffect","useState","SectionCard","useStateValue","Section","state","dispatch","sections","stream","setStream","fetch","testId","then","res","json","data","console","log","type","item","toggleSubject","index","id","map","info","i","open","testTitle","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,eAAP;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAGA,SAASC,OAAT,GAAkB;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,aAAa,EAAvC;AAEA,QAAMI,QAAQ,GAAG,CACb,CAAC,SAAD,EAAY,WAAZ,EAAyB,aAAzB,CADa,EAEb,CAAC,4BAAD,EAA+B,kBAA/B,EAAmD,mBAAnD,EAAwE,6BAAxE,CAFa,EAGb,CAAC,oCAAD,CAHa,CAAjB;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,KAAK,CAAE,+BAA8BL,KAAK,CAACM,MAAO,EAA7C,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAE,0BADD;AAELC,QAAAA,IAAI,EAAEJ,IAAI,CAACP;AAFN,OAAD,CAAR;AAIAC,MAAAA,SAAS,CAACM,IAAI,CAACP,MAAN,CAAT;AACH,KATL;AAYA,WAAO,MAAI,CAAE,CAAb;AACH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMY,aAAa,GAAG,UAAUC,KAAV,EAAiBC,EAAjB,EAAoB;AACtChB,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAE,uBADD;AAELC,MAAAA,IAAI,EAAEG;AAFD,KAAD,CAAR;AAIAb,IAAAA,SAAS,CAACD,MAAM,CAACe,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAY;AAC7B,UAAGA,CAAC,IAAIJ,KAAR,EAAc;AACVG,QAAAA,IAAI,CAACE,IAAL,GAAY,CAACF,IAAI,CAACE,IAAlB;AACH,OAFD,MAGI;AACAF,QAAAA,IAAI,CAACE,IAAL,GAAY,KAAZ;AACH;;AACD,aAAOF,IAAP;AACH,KARS,CAAD,CAAT;AASH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,KAAK,CAACsB,SAAX,CADJ,eAEI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,QAAQ,CAACF,KAAK,CAACM,MAAP,CAAR,CAAuBY,GAAvB,CAA2B,CAACK,IAAD,EAAOH,CAAP,KAAa;AACrC,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,CAApB;AACa,MAAA,aAAa,EAAIL,aAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH,GARA,CADL,CAFJ,CADJ;AAgBH;;AACD,eAAehB,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport SectionCard from \"../components/SectionCard\";\nimport \"./Section.css\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\n\n\nfunction Section(){\n\n    const [state, dispatch] = useStateValue();\n\n    const sections = [\n        [\"Physics\", \"Chemistry\", \"Mathematics\"],\n        [\"Database Management System\", \"Operating System\", \"Computer Networks\", \"Object Oriented Programming\"],\n        [\"Aptitude Ability, English Language\"]\n    ];\n\n    const [stream, setStream] = useState([]);\n\n    useEffect(()=>{\n        fetch(`http://localhost:5000/tests/${state.testId}`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                dispatch({\n                    type: 'UPDATE_TEST_STREAMS_INFO' ,\n                    item: data.stream\n                });\n                setStream(data.stream);\n            });\n\n\n        return ()=>{}\n    }, []);\n\n    const toggleSubject = function (index, id){\n        dispatch({\n            type: 'UPDATE_TEST_STREAM_ID' ,\n            item: id\n        })\n        setStream(stream.map((info, i) =>{\n            if(i == index){\n                info.open = !info.open\n            }\n            else{\n                info.open = false;\n            }\n            return info;\n        }))\n    };\n\n    return(\n        <div className={\"section\"}>\n            <h1>{state.testTitle}</h1>\n            <div className={\"subsection\"}>\n                {sections[state.testId].map((name, i) => {\n                    return(\n                        <div>\n                            <SectionCard index={i}\n                                         toggleSubject = {toggleSubject}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}