{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/components/SectionCard.js\";\nimport React, { useEffect } from \"react\";\nimport \"./SectionCard.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\nimport { setActiveQuestion, setAnsweredQuestions, setVisitedQuestions, setYourAnswer, updateTopicDetails, updateTopicId } from \"../contextAPI/actions\";\n\nfunction SectionCard({\n  sectionId,\n  toggleSection,\n  openClass,\n  section\n}) {\n  const [state, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const setTopicDetails = () => {\n    fetch(`http://localhost:5000/topics/${state.topicId}`).then(res => res.json()).then(data => {\n      console.log(data);\n      updateTopicDetails(data, dispatch);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const createConfirm = topic_id => {\n    // eslint-disable-next-line no-restricted-globals\n    let flag = confirm(\"Are you sure you want to do Quiz?\");\n\n    if (flag) {\n      updateTopicId(topic_id, dispatch);\n      setTopicDetails();\n      history.push('/quiz');\n    }\n  };\n\n  useEffect(() => {\n    let numberOfQuestions = state.topicDetails.questions.length;\n    console.log(numberOfQuestions);\n\n    if (numberOfQuestions > 0) {\n      let list = Array(numberOfQuestions).fill(false);\n      list[0] = true;\n      setVisitedQuestions(list, dispatch);\n      setActiveQuestion(1, dispatch);\n      list = Array(numberOfQuestions).fill(false);\n      setAnsweredQuestions(list, dispatch);\n      list = Array(numberOfQuestions).fill(0);\n      setYourAnswer(list, dispatch);\n    }\n\n    console.log(state.topicDetails);\n    return () => {};\n  }, [state.topicDetails]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sectionCard \" + (openClass[sectionId] ? \"open\" : \"\"),\n    key: sectionId,\n    onClick: () => toggleSection(sectionId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sectionCard__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, section.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sectionCard__topics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, section.topics.map((topic, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => createConfirm(topic.id),\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, topic.name);\n  })));\n}\n\nexport default SectionCard;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/components/SectionCard.js"],"names":["React","useEffect","useHistory","useStateValue","setActiveQuestion","setAnsweredQuestions","setVisitedQuestions","setYourAnswer","updateTopicDetails","updateTopicId","SectionCard","sectionId","toggleSection","openClass","section","state","dispatch","history","setTopicDetails","fetch","topicId","then","res","json","data","console","log","catch","err","createConfirm","topic_id","flag","confirm","push","numberOfQuestions","topicDetails","questions","length","list","Array","fill","name","topics","map","topic","i","id"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport \"./SectionCard.css\";\nimport {useHistory} from \"react-router-dom\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\nimport {\n    setActiveQuestion,\n    setAnsweredQuestions,\n    setVisitedQuestions, setYourAnswer,\n    updateTopicDetails,\n    updateTopicId\n} from \"../contextAPI/actions\";\n\nfunction SectionCard({sectionId, toggleSection, openClass, section}){\n\n    const [state, dispatch] = useStateValue();\n\n    const history = useHistory();\n\n    const setTopicDetails =  () => {\n        fetch(`http://localhost:5000/topics/${state.topicId}`)\n            .then(res => res.json())\n            .then(data=>{\n                console.log(data);\n\n                updateTopicDetails(data, dispatch);\n\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n\n    const createConfirm = (topic_id) =>{\n\n        // eslint-disable-next-line no-restricted-globals\n        let flag = confirm(\"Are you sure you want to do Quiz?\");\n        if(flag){\n\n            updateTopicId(topic_id, dispatch);\n            setTopicDetails();\n\n            history.push('/quiz');\n        }\n    }\n    useEffect(()=>{\n\n        let numberOfQuestions = state.topicDetails.questions.length;\n        console.log(numberOfQuestions);\n\n        if(numberOfQuestions> 0){\n\n            let list = Array(numberOfQuestions).fill(false);\n            list[0] = true;\n\n            setVisitedQuestions(list, dispatch);\n            setActiveQuestion(1, dispatch);\n\n            list = Array(numberOfQuestions).fill(false);\n\n            setAnsweredQuestions(list, dispatch);\n\n            list = Array(numberOfQuestions).fill(0);\n\n            setYourAnswer(list, dispatch)\n        }\n        console.log(state.topicDetails);\n\n        return ()=>{};\n    }, [state.topicDetails]);\n\n    return(\n        <div className={\"sectionCard \"+ (openClass[sectionId]? \"open\": \"\")}\n            key={sectionId}\n             onClick={()=>toggleSection(sectionId)}\n        >\n            <div className={\"sectionCard__heading\"}>\n                {section.name}\n            </div>\n            <div className={\"sectionCard__topics\"}>\n                {\n\n                    section.topics.map((topic, i) =>{\n                        return(\n                            <div onClick={()=>createConfirm(topic.id)} key={i}>\n                                {topic.name}\n                            </div>\n\n                        );\n                    })\n                }\n            </div>\n        </div>\n    );\n}\nexport default SectionCard;\n"]},"metadata":{},"sourceType":"module"}