{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/pages/Quiz.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Quiz.css\";\nimport TimerHeader from \"../components/TimerHeader\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\n\nfunction Quiz() {\n  const [state, dispatch] = useStateValue();\n  const [questions, setQuestions] = useState([]);\n  const [status, setStatus] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/topics/${state.topicId}/questions`).then(res => res.json()).then(data => {\n      setQuestions(data);\n      let numberOfQuestions = questions.length;\n      let result = [];\n\n      for (let i = 0; i < numberOfQuestions; i++) {\n        result.push({\n          status: false,\n          class: \"\"\n        });\n      }\n\n      dispatch({\n        type: 'UPDATE_RESULT',\n        item: result\n      });\n      console.log(state.result);\n    });\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimerHeader, {\n    questions: questions,\n    resultStatus: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz__questionSet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, questions.map((info, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz__questionSet__question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCard, {\n      question: info.text,\n      answer: info.answer,\n      options: info.options,\n      index: i,\n      resultStatus: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }));\n  })));\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/pages/Quiz.js"],"names":["React","useEffect","useState","TimerHeader","QuestionCard","useStateValue","Quiz","state","dispatch","questions","setQuestions","status","setStatus","fetch","topicId","then","res","json","data","numberOfQuestions","length","result","i","push","class","type","item","console","log","map","info","text","answer","options"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAEA,SAASC,IAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,aAAa,EAAvC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEVY,IAAAA,KAAK,CAAE,gCAA+BN,KAAK,CAACO,OAAQ,YAA/C,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAE;AACRR,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACA,UAAIC,iBAAiB,GAAGV,SAAS,CAACW,MAAlC;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,iBAAf,EAAkCG,CAAC,EAAnC,EAAsC;AAClCD,QAAAA,MAAM,CAACE,IAAP,CAAY;AACRZ,UAAAA,MAAM,EAAE,KADA;AAERa,UAAAA,KAAK,EAAE;AAFC,SAAZ;AAIH;;AACDhB,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,IAAI,EAAEL;AAFD,OAAD,CAAR;AAIAM,MAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAK,CAACc,MAAlB;AACH,KAjBL;AAmBA,WAAO,MAAI,CAAE,CAAb;AACH,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEZ,SAAxB;AACY,IAAA,YAAY,EAAEE,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,SAAS,CAACoB,GAAV,CAAc,CAACC,IAAD,EAAOR,CAAP,KAAW;AACzB,wBACI;AAAK,MAAA,SAAS,EAAE,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEQ,IAAI,CAACC,IAA7B;AACc,MAAA,MAAM,EAAED,IAAI,CAACE,MAD3B;AAEc,MAAA,OAAO,EAAEF,IAAI,CAACG,OAF5B;AAGc,MAAA,KAAK,EAAEX,CAHrB;AAIc,MAAA,YAAY,EAAIX,MAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAYH,GAbG,CAFR,CAJJ,CADJ;AAyBH;;AAED,eAAeL,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./Quiz.css\";\nimport TimerHeader from \"../components/TimerHeader\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\n\nfunction Quiz(){\n    const [state, dispatch] = useStateValue();\n    const [questions, setQuestions] = useState([]);\n    const [status, setStatus] = useState([]);\n\n    useEffect(()=>{\n\n        fetch(`http://localhost:5000/topics/${state.topicId}/questions`)\n            .then(res => res.json())\n            .then(data=>{\n                setQuestions(data);\n                let numberOfQuestions = questions.length;\n                let result = [];\n                for(let i=0; i<numberOfQuestions; i++){\n                    result.push({\n                        status: false,\n                        class: \"\"\n                    });\n                }\n                dispatch({\n                    type: 'UPDATE_RESULT',\n                    item: result\n                })\n                console.log(state.result);\n            });\n\n        return ()=>{};\n    }, []);\n\n    return(\n        <div className={\"quiz\"}>\n            <TimerHeader questions={questions}\n                        resultStatus={status}\n            />\n            <div className={\"quiz__questionSet\"}>\n                {\n                    questions.map((info, i)=>{\n                    return(\n                        <div className={\"quiz__questionSet__question\"}>\n                            <QuestionCard question={info.text}\n                                          answer={info.answer}\n                                          options={info.options}\n                                          index={i}\n                                          resultStatus = {status}\n                            />\n                        </div>\n\n                        )\n\n                })}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}