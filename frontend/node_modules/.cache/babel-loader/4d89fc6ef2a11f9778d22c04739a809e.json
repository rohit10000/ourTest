{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"./Login.css\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\nimport Alert from \"react-bootstrap/Alert\";\n\nfunction Login() {\n  const history = useHistory();\n  const [state, dispatch] = useStateValue();\n  const [error, setError] = useState();\n  const [show, setShow] = useState(false);\n\n  const loginCheck = () => {\n    let email = document.getElementById(\"email\").value;\n    let password = document.getElementById(\"password\").value;\n\n    function checkEmailAndPassword(email, users, password) {\n      let numberOfUsers = users.length;\n\n      for (let i = 0; i < numberOfUsers; i++) {\n        if (email == users[i].email) {\n          if (password == users[i].password) {\n            dispatch({\n              type: \"UPDATE_USER_ID\",\n              item: users[i]._id\n            });\n            return true;\n          } else {\n            setError(\"Invalid Email/Password\");\n            return false;\n          }\n        }\n      }\n\n      setError(\"EmailId not found\");\n      return false;\n    }\n\n    let isValid = checkEmailAndPassword(email, state.users, password);\n\n    if (isValid) {\n      let userInfo = {\n        \"email\": email,\n        \"password\": password\n      };\n      fetch('http://localhost:5000/users/login', {\n        method: 'POST',\n        // or 'PUT'\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userInfo)\n      }).then(response => response.json()).then(data => {\n        console.log('successfully LoggedIn', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } else {\n      setShow(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Log in to your account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__oauth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__oauth__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"LOG IN USING\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"login__oauth__image\",\n    src: require(\"../images/google.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__separator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"login__separator__hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"login__separator__hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))), function () {\n    if (show == true) {\n      return /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          float: \"left\",\n          paddingBottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, error));\n    }\n  }(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__local_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Enter Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: loginCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Login and Continue\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__forgot__password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__signup__option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Not a ourTest user? \", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => history.push('/signup'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 40\n    }\n  }, \"Sign up\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/pages/Login.js"],"names":["React","useState","useHistory","useStateValue","Alert","Login","history","state","dispatch","error","setError","show","setShow","loginCheck","email","document","getElementById","value","password","checkEmailAndPassword","users","numberOfUsers","length","i","type","item","_id","isValid","userInfo","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","require","float","paddingBottom","push"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useHistory} from \"react-router\";\nimport \"./Login.css\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\nimport Alert from \"react-bootstrap/Alert\";\n\nfunction Login(){\n    const history = useHistory();\n    const [state, dispatch] = useStateValue();\n\n    const [error, setError] = useState();\n    const [show, setShow] = useState(false);\n\n    const loginCheck = ()=>{\n        let email = document.getElementById(\"email\").value;\n        let password = document.getElementById(\"password\").value;\n\n        function checkEmailAndPassword(email, users, password){\n            let numberOfUsers = users.length;\n            for(let i=0; i<numberOfUsers; i++){\n                if(email == users[i].email){\n                    if(password == users[i].password){\n                        dispatch({\n                            type: \"UPDATE_USER_ID\",\n                            item: users[i]._id\n                        });\n                        return true;\n                    }\n                    else{\n                        setError(\"Invalid Email/Password\");\n                        return false;\n                    }\n                }\n            }\n            setError(\"EmailId not found\");\n            return false;\n        }\n\n        let isValid = checkEmailAndPassword(email, state.users, password);\n        if(isValid){\n            let userInfo = {\n                \"email\": email,\n                \"password\": password\n            };\n\n            fetch('http://localhost:5000/users/login', {\n                method: 'POST', // or 'PUT'\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userInfo),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log('successfully LoggedIn', data);\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n\n        }\n        else{\n            setShow(true);\n        }\n    }\n\n    return(\n        <div className={\"login\"}>\n            <div className={\"login__title\"}>\n                <p>Log in to your account</p>\n            </div>\n            <div className={\"login__oauth\"}>\n                <div className={\"login__oauth__title\"}>\n                    LOG IN USING\n                </div>\n                <img className={\"login__oauth__image\"} src={require(\"../images/google.jpg\")}\n                />\n            </div>\n            <div className={\"login__separator\"}>\n                <div >\n                    <hr className={\"login__separator__hr\"} />\n                </div>\n                <p>OR</p>\n                <div>\n                    <hr className={\"login__separator__hr\"}/>\n                </div>\n            </div>\n            {\n                (function (){\n                    if(show == true){\n                        return (\n                            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                                <p style={{float:\"left\", paddingBottom: 0}}>\n                                    {error}\n                                </p>\n                            </Alert>\n                        );\n                    }\n                })()\n            }\n            <div className={\"login__local\"}>\n\n                <div className={\"login__local_form\"}>\n                    <label htmlFor={\"userEmail\"}>Email</label>\n                    <input type={\"email\"} id={\"email\"} name={\"email\"} placeholder={\"Enter Email\"} required={true}/>\n\n                    <label htmlFor={\"password\"}>Password</label>\n                    <input type={\"password\"} id={\"password\"} name={\"password\"} placeholder={\"Enter Password\"} required={true}/>\n\n                    <button type={\"submit\"} onClick={loginCheck}>Login and Continue</button>\n                </div>\n            </div>\n            <div className={\"login__forgot__password\"}>\n                <a>Forgot password?</a>\n            </div>\n            <div className={\"login__signup__option\"}>\n                <p>Not a ourTest user? <span onClick={()=>history.push('/signup')}>Sign up</span></p>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}