{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/pages/Quiz.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Quiz.css\";\nimport TimerHeader from \"../components/TimerHeader\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\n\nfunction Quiz() {\n  const [state, dispatch] = useStateValue(); // const [questions, setQuestions] = useState([]);\n  // const [status, setStatus] = useState([]);\n\n  const setTopicsDetails = async () => {\n    try {\n      let topicDetails = await fetch(`http://localhost:5000/topics/${state.topicId}`);\n      topicDetails = await topicDetails.json();\n      return topicDetails;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setTopicsDetails().then(data => {\n      console.log(data);\n      dispatch({\n        type: 'UPDATE_TOPIC_DETAILS',\n        item: data\n      });\n    });\n    console.log(state.topicDetails);\n  }, []); // useEffect(() => {\n  //     async function fetchData() {\n  //         /**\n  //          * This is just a helper to fetch data from endpoints. It can be done using\n  //          * axios or similar libraries\n  //          */\n  //         const orders = await FetchService\n  //             .get('/api/orders');\n  //         dispatch(changeData(orders))\n  //     }\n  //     fetchData();\n  // }, []);\n  // useEffect(()=>{\n  //\n  //     async function setTopicDetails(){\n  //         await fetch(`http://localhost:5000/topics/${state.topicId}`)\n  //             .then(res => res.json())\n  //             .then(data => {\n  //                 console.log(data);\n  //                 let numberOfQuestions = data.questions.length;\n  //                 let result = [];\n  //                 for(let i=0; i<numberOfQuestions; i++){\n  //                     result.push({\n  //                         class: \"\"\n  //                     });\n  //                 }\n  //                 dispatch({\n  //                     type: 'UPDATE_TOPIC_DETAILS',\n  //                     item: data\n  //                 });\n  //                 dispatch({\n  //                     type: 'UPDATE_RESULT_CLASS',\n  //                     item: result\n  //                 });\n  //                 // setStatus(result);\n  //                 console.log(state.topicDetails);\n  //                 console.log(state.result);\n  //             })\n  //     };\n  //\n  //     setTopicDetails();\n  //\n  //     return ()=>{};\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimerHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz__questionSet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, state.topicDetails.questions.map((info, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz__questionSet__question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCard, {\n      question: info.text,\n      answer: info.answer,\n      options: info.options,\n      index: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }));\n  })));\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/pages/Quiz.js"],"names":["React","useEffect","useState","TimerHeader","QuestionCard","useStateValue","Quiz","state","dispatch","setTopicsDetails","topicDetails","fetch","topicId","json","error","console","log","then","data","type","item","questions","map","info","i","text","answer","options"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAEA,SAASC,IAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,aAAa,EAAvC,CADW,CAEX;AACA;;AAEA,QAAMI,gBAAgB,GAAG,YAAU;AAC/B,QAAI;AACA,UAAIC,YAAY,GAAG,MACfC,KAAK,CAAE,gCAA+BJ,KAAK,CAACK,OAAQ,EAA/C,CADT;AAEAF,MAAAA,YAAY,GAAG,MAAMA,YAAY,CAACG,IAAb,EAArB;AACA,aAAOH,YAAP;AACH,KALD,CAKC,OAAOI,KAAP,EAAa;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GATD;;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,gBAAgB,GAAGQ,IAAnB,CAAyBC,IAAD,IAAS;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAV,MAAAA,QAAQ,CAAC;AACLW,QAAAA,IAAI,EAAC,sBADA;AAELC,QAAAA,IAAI,EAAEF;AAFD,OAAD,CAAR;AAIH,KAND;AAOAH,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACG,YAAlB;AACH,GATQ,EASN,EATM,CAAT,CAhBW,CA2BX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,KAAK,CAACG,YAAN,CAAmBW,SAAnB,CAA6BC,GAA7B,CAAiC,CAACC,IAAD,EAAOC,CAAP,KAAW;AAC5C,wBACI;AAAK,MAAA,SAAS,EAAE,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,IAAI,CAACE,IAA7B;AACc,MAAA,MAAM,EAAEF,IAAI,CAACG,MAD3B;AAEc,MAAA,OAAO,EAAEH,IAAI,CAACI,OAF5B;AAGc,MAAA,KAAK,EAAEH,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAWH,GAZG,CAFR,CALJ,CADJ;AAyBH;;AAED,eAAelB,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./Quiz.css\";\nimport TimerHeader from \"../components/TimerHeader\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\n\nfunction Quiz(){\n    const [state, dispatch] = useStateValue();\n    // const [questions, setQuestions] = useState([]);\n    // const [status, setStatus] = useState([]);\n\n    const setTopicsDetails = async() =>{\n        try {\n            let topicDetails = await\n                fetch(`http://localhost:5000/topics/${state.topicId}`);\n            topicDetails = await topicDetails.json();\n            return topicDetails;\n        }catch (error){\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        setTopicsDetails().then((data) =>{\n            console.log(data);\n            dispatch({\n                type:'UPDATE_TOPIC_DETAILS',\n                item: data\n            })\n        });\n        console.log(state.topicDetails);\n    }, []);\n\n    // useEffect(() => {\n    //     async function fetchData() {\n    //         /**\n    //          * This is just a helper to fetch data from endpoints. It can be done using\n    //          * axios or similar libraries\n    //          */\n    //         const orders = await FetchService\n    //             .get('/api/orders');\n    //         dispatch(changeData(orders))\n    //     }\n    //     fetchData();\n    // }, []);\n\n\n\n    // useEffect(()=>{\n    //\n    //     async function setTopicDetails(){\n    //         await fetch(`http://localhost:5000/topics/${state.topicId}`)\n    //             .then(res => res.json())\n    //             .then(data => {\n    //                 console.log(data);\n    //                 let numberOfQuestions = data.questions.length;\n    //                 let result = [];\n    //                 for(let i=0; i<numberOfQuestions; i++){\n    //                     result.push({\n    //                         class: \"\"\n    //                     });\n    //                 }\n    //                 dispatch({\n    //                     type: 'UPDATE_TOPIC_DETAILS',\n    //                     item: data\n    //                 });\n    //                 dispatch({\n    //                     type: 'UPDATE_RESULT_CLASS',\n    //                     item: result\n    //                 });\n    //                 // setStatus(result);\n    //                 console.log(state.topicDetails);\n    //                 console.log(state.result);\n    //             })\n    //     };\n    //\n    //     setTopicDetails();\n    //\n    //     return ()=>{};\n    // }, []);\n\n    return(\n        <div className={\"quiz\"}>\n            {/*<TimerHeader questions={questions}*/}\n            {/*            resultStatus={status}*/}\n            {/*/>*/}\n            <TimerHeader/>\n            <div className={\"quiz__questionSet\"}>\n                {\n                    state.topicDetails.questions.map((info, i)=>{\n                    return(\n                        <div className={\"quiz__questionSet__question\"}>\n                            <QuestionCard question={info.text}\n                                          answer={info.answer}\n                                          options={info.options}\n                                          index={i}\n                            />\n                        </div>\n\n                        )\n\n                })}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}