{"ast":null,"code":"import React from \"react\";\nimport local from \"../data/local\";\nimport { defaultState } from \"../data/defaultState\";\nexport const initialState = {\n  defaultState\n};\n\nlet reducer = (state, action) => {\n  switch (action.type) {\n    //logic for Update Test Id\n    case 'UPDATE_TEST_ID':\n      return { ...state,\n        testId: action.item\n      };\n\n    case 'UPDATE_TEST_TITLE':\n      //logic for Update Test Title\n      return { ...state,\n        testTitle: action.item\n      };\n\n    case 'UPDATE_TOPIC_ID':\n      //logic for Update Topic Id\n      return { ...state,\n        topicId: action.item\n      };\n\n    case 'UPDATE_TOPIC_DETAIL':\n      //logic for Update Topic Details\n      return { ...state,\n        topicDetails: action.item\n      };\n\n    case 'SET_ACTIVE_QUESTION':\n      //logic for setting Active Questions\n      return { ...state,\n        activeQuestion: action.item\n      };\n\n    case 'SET_VISITED_QUESTION':\n      //logic for setting Visited Questions\n      return { ...state,\n        visitedQuestion: action.item\n      };\n\n    case 'UPDATE_VISITED_QUESTION':\n      //logic for updating Visited Questions\n      var list = state.visitedQuestion;\n      list[parseInt(action.item)] = true;\n      return { ...state,\n        visitedQuestion: list\n      };\n\n    case 'SET_ANSWERED_QUESTION':\n      //logic for setting Answered Questions\n      return { ...state,\n        answeredQuestion: action.item\n      };\n\n    case 'UPDATE_ANSWERED_QUESTION':\n      //logic for updating Answered Questions\n      var list = state.answeredQuestion;\n      list[state.activeQuestion - 1] = action.item;\n      return { ...state,\n        answeredQuestion: list\n      };\n\n    case 'SET_YOUR_ANSWER':\n      //logic for setting your answer list\n      return { ...state,\n        yourAnswer: action.item\n      };\n\n    case 'UPDATE_YOUR_ANSWER':\n      //logic for updating your answer in the list\n      var list = state.yourAnswer;\n      list[state.activeQuestion - 1] = action.item;\n      return { ...state,\n        yourAnswer: list\n      };\n\n    case 'UPDATE_RESULT_CLASS':\n      //logic for updating result class\n      return { ...state,\n        resultClass: action.item\n      };\n\n    case 'SET_YOUR_SCORE':\n      //logic for setting you your score\n      return { ...state,\n        yourScore: action.item\n      };\n    //rest is utility\n\n    case 'SET_QUESTION_TIMER':\n      return { ...state,\n        questionTimer: action.item\n      };\n\n    case 'UPDATE_QUESTION_TIMER':\n      list = state.questionTimer;\n      list[state.activeQuestion - 1] = action.item;\n      return { ...state,\n        questionTimer: list\n      };\n\n    case 'SET_USERS':\n      return { ...state,\n        users: action.item\n      };\n\n    case 'ADD_USER':\n      return { ...state,\n        users: [...state.users, action.item]\n      };\n\n    case 'SET_USER_ID':\n      return { ...state,\n        userId: action.item\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/contextAPI/Reducer.js"],"names":["React","local","defaultState","initialState","reducer","state","action","type","testId","item","testTitle","topicId","topicDetails","activeQuestion","visitedQuestion","list","parseInt","answeredQuestion","yourAnswer","resultClass","yourScore","questionTimer","users","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport local from \"../data/local\";\nimport {defaultState} from \"../data/defaultState\";\n\nexport const initialState = {\n    defaultState\n};\n\nlet reducer = (state, action) => {\n\n    switch (action.type){\n        //logic for Update Test Id\n\n        case 'UPDATE_TEST_ID':\n            return {\n                ...state,\n                testId: action.item\n            }\n\n        case 'UPDATE_TEST_TITLE':\n            //logic for Update Test Title\n\n            return {\n                ...state,\n                testTitle: action.item\n            }\n\n        case 'UPDATE_TOPIC_ID':\n            //logic for Update Topic Id\n\n            return {\n                ...state,\n                topicId: action.item\n            }\n\n        case 'UPDATE_TOPIC_DETAIL':\n            //logic for Update Topic Details\n\n            return {\n                ...state,\n                topicDetails: action.item\n            }\n\n        case 'SET_ACTIVE_QUESTION':\n            //logic for setting Active Questions\n\n            return {\n                ...state,\n                activeQuestion: action.item\n            }\n        case 'SET_VISITED_QUESTION':\n            //logic for setting Visited Questions\n\n            return {\n                ...state,\n                visitedQuestion: action.item\n            }\n\n        case 'UPDATE_VISITED_QUESTION':\n            //logic for updating Visited Questions\n\n            var list= state.visitedQuestion;\n            list[parseInt(action.item)] = true;\n\n            return {\n                ...state,\n                visitedQuestion:list\n            }\n\n        case 'SET_ANSWERED_QUESTION':\n            //logic for setting Answered Questions\n\n            return {\n                ...state,\n                answeredQuestion: action.item\n            }\n\n        case 'UPDATE_ANSWERED_QUESTION':\n            //logic for updating Answered Questions\n\n            var list = state.answeredQuestion;\n            list[state.activeQuestion-1] = action.item\n\n            return {\n                ...state,\n                answeredQuestion: list\n            }\n\n        case 'SET_YOUR_ANSWER':\n            //logic for setting your answer list\n\n            return {\n                ...state,\n                yourAnswer: action.item\n            }\n\n        case 'UPDATE_YOUR_ANSWER':\n            //logic for updating your answer in the list\n\n            var list = state.yourAnswer;\n            list[state.activeQuestion-1] = action.item\n\n            return {\n                ...state,\n                yourAnswer: list\n            }\n\n        case 'UPDATE_RESULT_CLASS':\n            //logic for updating result class\n\n            return {\n                ...state,\n                resultClass: action.item\n            }\n\n        case 'SET_YOUR_SCORE':\n            //logic for setting you your score\n\n            return {\n                ...state,\n                yourScore: action.item\n            }\n\n            //rest is utility\n\n        case 'SET_QUESTION_TIMER':\n            return {\n                ...state,\n                questionTimer: action.item\n            }\n\n\n\n        case 'UPDATE_QUESTION_TIMER':\n            list = state.questionTimer;\n            list[state.activeQuestion-1] = action.item;\n\n            return {\n                ...state,\n                questionTimer: list\n            }\n\n        case 'SET_USERS':\n            return {\n                ...state,\n                users: action.item\n            }\n        case 'ADD_USER':\n            return {\n                ...state,\n                users: [...state.users, action.item]\n            }\n        case 'SET_USER_ID':\n            return {\n                ...state,\n                userId: action.item\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}