{"ast":null,"code":"import React from \"react\";\nexport const initialState = {\n  // quiz: [\n  //         {\n  //             question: \"Superposition principle can not be applied to these quantities in electrostatics.\",\n  //             options: [\"Electrostatic energy\", \"Electric Field\", \"Electric Potential\", \"Electric force\"],\n  //             answer: {\n  //                 index: 1,\n  //                 value: \"Electrostatic energy\"\n  //             },\n  //             result:{\n  //                 status: false,\n  //                 class: \"\"\n  //             }\n  //         },\n  //         {\n  //             question: \"Two conducting charged spheres X and Y having unequal charges are connected by the \" +\n  //                 \"wire. Which of the following is true?\",\n  //             options: [\"Electrostatic energy is conserved\", \"Charge is conserved\",\n  //                 \"Both the charge and electrostatic energy is conserved\", \"Neither of these is conserved\"],\n  //             answer: {\n  //                 index: 2,\n  //                 value: \"Charge is conserved\"\n  //             },\n  //             result:{\n  //                 status: false,\n  //                 class: \"\"\n  //             }\n  //         }\n  //     ],\n  testId: null,\n  testTitle: null,\n  testStreamsInfo: null,\n  testStreamId: null,\n  topicDetails: null,\n  result: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_QUIZ_INFO':\n      //Logic for adding item to basket\n      return { ...state,\n        quiz: action.item\n      };\n\n    case 'UPDATE_TEST_ID':\n      //Logic for updating test id\n      return { ...state,\n        testId: action.item\n      };\n\n    case 'UPDATE_TEST_TITLE':\n      //Logic for updating test title\n      return { ...state,\n        testTitle: action.item\n      };\n\n    case 'UPDATE_TEST_STREAMS_INFO':\n      //Logic for updating test streams\n      return { ...state,\n        testStreamsInfo: action.item\n      };\n\n    case 'UPDATE_TEST_STREAM_ID':\n      //Logic for updating test title\n      return { ...state,\n        testStreamId: action.item\n      };\n\n    case 'UPDATE_TOPIC_DETAILS':\n      //Logic for updating test title\n      return { ...state,\n        topicDetails: action.item\n      };\n\n    case 'UPDATE_RESULT':\n      //Logic for updating test title\n      return { ...state,\n        result: action.item\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/rohit/Public/test_system/src/components/Reducer.js"],"names":["React","initialState","testId","testTitle","testStreamsInfo","testStreamId","topicDetails","result","reducer","state","action","type","quiz","item"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,EAAE,IA7BgB;AA8BxBC,EAAAA,SAAS,EAAE,IA9Ba;AA+BxBC,EAAAA,eAAe,EAAE,IA/BO;AAgCxBC,EAAAA,YAAY,EAAE,IAhCU;AAkCxBC,EAAAA,YAAY,EAAE,IAlCU;AAmCxBC,EAAAA,MAAM,EAAE;AAnCgB,CAArB;;AAuCP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAE3B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI;AACA,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAFV,OAAP;;AAIJ,SAAK,gBAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHP,QAAAA,MAAM,EAAEQ,MAAM,CAACG;AAFZ,OAAP;;AAIJ,SAAK,mBAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHN,QAAAA,SAAS,EAAEO,MAAM,CAACG;AAFf,OAAP;;AAIJ,SAAK,0BAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,eAAe,EAAEM,MAAM,CAACG;AAFrB,OAAP;;AAIJ,SAAK,uBAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHJ,QAAAA,YAAY,EAAEK,MAAM,CAACG;AAFlB,OAAP;;AAIJ,SAAK,sBAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,YAAY,EAAEI,MAAM,CAACG;AAFlB,OAAP;;AAIJ,SAAK,eAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACG;AAFZ,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AA5CR;AA8CH;;AAED,eAAeD,OAAf","sourcesContent":["import React from \"react\";\n\nexport const initialState = {\n    // quiz: [\n    //         {\n    //             question: \"Superposition principle can not be applied to these quantities in electrostatics.\",\n    //             options: [\"Electrostatic energy\", \"Electric Field\", \"Electric Potential\", \"Electric force\"],\n    //             answer: {\n    //                 index: 1,\n    //                 value: \"Electrostatic energy\"\n    //             },\n    //             result:{\n    //                 status: false,\n    //                 class: \"\"\n    //             }\n    //         },\n    //         {\n    //             question: \"Two conducting charged spheres X and Y having unequal charges are connected by the \" +\n    //                 \"wire. Which of the following is true?\",\n    //             options: [\"Electrostatic energy is conserved\", \"Charge is conserved\",\n    //                 \"Both the charge and electrostatic energy is conserved\", \"Neither of these is conserved\"],\n    //             answer: {\n    //                 index: 2,\n    //                 value: \"Charge is conserved\"\n    //             },\n    //             result:{\n    //                 status: false,\n    //                 class: \"\"\n    //             }\n    //         }\n    //     ],\n    testId: null,\n    testTitle: null,\n    testStreamsInfo: null,\n    testStreamId: null,\n\n    topicDetails: null,\n    result: null\n\n};\n\nfunction reducer(state, action){\n\n    switch (action.type){\n        case 'UPDATE_QUIZ_INFO':\n            //Logic for adding item to basket\n            return {\n                ...state,\n                quiz: action.item\n            }\n        case 'UPDATE_TEST_ID':\n            //Logic for updating test id\n            return {\n                ...state,\n                testId: action.item\n            }\n        case 'UPDATE_TEST_TITLE':\n            //Logic for updating test title\n            return {\n                ...state,\n                testTitle: action.item\n            }\n        case 'UPDATE_TEST_STREAMS_INFO':\n            //Logic for updating test streams\n            return {\n                ...state,\n                testStreamsInfo: action.item\n            }\n        case 'UPDATE_TEST_STREAM_ID':\n            //Logic for updating test title\n            return {\n                ...state,\n                testStreamId: action.item\n            }\n        case 'UPDATE_TOPIC_DETAILS':\n            //Logic for updating test title\n            return {\n                ...state,\n                topicDetails: action.item\n            }\n        case 'UPDATE_RESULT':\n            //Logic for updating test title\n            return {\n                ...state,\n                result: action.item\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}