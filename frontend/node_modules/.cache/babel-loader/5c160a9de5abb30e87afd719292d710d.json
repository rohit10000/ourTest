{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/pages/Quiz.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Quiz.css\";\nimport TimerHeader from \"../components/TimerHeader\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\n\nfunction Quiz() {\n  const [state, dispatch] = useStateValue(); // const [questions, setQuestions] = useState([]);\n  // const [status, setStatus] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      /**\n       * This is just a helper to fetch data from endpoints. It can be done using\n       * axios or similar libraries\n       */\n      const orders = await FetchService.get('/api/orders');\n      dispatch(changeData(orders));\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function setTopicDetails() {\n      await fetch(`http://localhost:5000/topics/${state.topicId}`).then(res => res.json()).then(data => {\n        console.log(data);\n        let numberOfQuestions = data.questions.length;\n        let result = [];\n\n        for (let i = 0; i < numberOfQuestions; i++) {\n          result.push({\n            class: \"\"\n          });\n        }\n\n        dispatch({\n          type: 'UPDATE_TOPIC_DETAILS',\n          item: data\n        });\n        dispatch({\n          type: 'UPDATE_RESULT_CLASS',\n          item: result\n        }); // setStatus(result);\n\n        console.log(state.topicDetails);\n        console.log(state.result);\n      });\n    }\n\n    ;\n    setTopicDetails();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimerHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz__questionSet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, state.topicDetails.questions.map((info, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz__questionSet__question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCard, {\n      question: info.text,\n      answer: info.answer,\n      options: info.options,\n      index: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }));\n  })));\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/pages/Quiz.js"],"names":["React","useEffect","useState","TimerHeader","QuestionCard","useStateValue","Quiz","state","dispatch","fetchData","orders","FetchService","get","changeData","setTopicDetails","fetch","topicId","then","res","json","data","console","log","numberOfQuestions","questions","length","result","i","push","class","type","item","topicDetails","map","info","text","answer","options"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;;AAEA,SAASC,IAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,aAAa,EAAvC,CADW,CAEX;AACA;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,SAAf,GAA2B;AACvB;;;;AAIA,YAAMC,MAAM,GAAG,MAAMC,YAAY,CAC5BC,GADgB,CACZ,aADY,CAArB;AAEAJ,MAAAA,QAAQ,CAACK,UAAU,CAACH,MAAD,CAAX,CAAR;AACH;;AACDD,IAAAA,SAAS;AACZ,GAXQ,EAWN,EAXM,CAAT;AAeAR,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAea,eAAf,GAAgC;AAC5B,YAAMC,KAAK,CAAE,gCAA+BR,KAAK,CAACS,OAAQ,EAA/C,CAAL,CACDC,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEIG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAIG,iBAAiB,GAAGH,IAAI,CAACI,SAAL,CAAeC,MAAvC;AACA,YAAIC,MAAM,GAAG,EAAb;;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,iBAAf,EAAkCI,CAAC,EAAnC,EAAsC;AAClCD,UAAAA,MAAM,CAACE,IAAP,CAAY;AACRC,YAAAA,KAAK,EAAE;AADC,WAAZ;AAGH;;AACDrB,QAAAA,QAAQ,CAAC;AACLsB,UAAAA,IAAI,EAAE,sBADD;AAELC,UAAAA,IAAI,EAAEX;AAFD,SAAD,CAAR;AAIAZ,QAAAA,QAAQ,CAAC;AACLsB,UAAAA,IAAI,EAAE,qBADD;AAELC,UAAAA,IAAI,EAAEL;AAFD,SAAD,CAAR,CAbU,CAiBV;;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACyB,YAAlB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACmB,MAAlB;AACH,OAtBC,CAAN;AAuBH;;AAAA;AAEDZ,IAAAA,eAAe;AAEf,WAAO,MAAI,CAAE,CAAb;AACH,GA/BQ,EA+BN,EA/BM,CAAT;AAiCA,sBACI;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQP,KAAK,CAACyB,YAAN,CAAmBR,SAAnB,CAA6BS,GAA7B,CAAiC,CAACC,IAAD,EAAOP,CAAP,KAAW;AAC5C,wBACI;AAAK,MAAA,SAAS,EAAE,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEO,IAAI,CAACC,IAA7B;AACc,MAAA,MAAM,EAAED,IAAI,CAACE,MAD3B;AAEc,MAAA,OAAO,EAAEF,IAAI,CAACG,OAF5B;AAGc,MAAA,KAAK,EAAEV,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAWH,GAZG,CAFR,CALJ,CADJ;AAyBH;;AAED,eAAerB,IAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./Quiz.css\";\nimport TimerHeader from \"../components/TimerHeader\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\n\nfunction Quiz(){\n    const [state, dispatch] = useStateValue();\n    // const [questions, setQuestions] = useState([]);\n    // const [status, setStatus] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            /**\n             * This is just a helper to fetch data from endpoints. It can be done using\n             * axios or similar libraries\n             */\n            const orders = await FetchService\n                .get('/api/orders');\n            dispatch(changeData(orders))\n        }\n        fetchData();\n    }, []);\n\n\n\n    useEffect(()=>{\n\n        async function setTopicDetails(){\n            await fetch(`http://localhost:5000/topics/${state.topicId}`)\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data);\n                    let numberOfQuestions = data.questions.length;\n                    let result = [];\n                    for(let i=0; i<numberOfQuestions; i++){\n                        result.push({\n                            class: \"\"\n                        });\n                    }\n                    dispatch({\n                        type: 'UPDATE_TOPIC_DETAILS',\n                        item: data\n                    });\n                    dispatch({\n                        type: 'UPDATE_RESULT_CLASS',\n                        item: result\n                    });\n                    // setStatus(result);\n                    console.log(state.topicDetails);\n                    console.log(state.result);\n                })\n        };\n\n        setTopicDetails();\n\n        return ()=>{};\n    }, []);\n\n    return(\n        <div className={\"quiz\"}>\n            {/*<TimerHeader questions={questions}*/}\n            {/*            resultStatus={status}*/}\n            {/*/>*/}\n            <TimerHeader/>\n            <div className={\"quiz__questionSet\"}>\n                {\n                    state.topicDetails.questions.map((info, i)=>{\n                    return(\n                        <div className={\"quiz__questionSet__question\"}>\n                            <QuestionCard question={info.text}\n                                          answer={info.answer}\n                                          options={info.options}\n                                          index={i}\n                            />\n                        </div>\n\n                        )\n\n                })}\n            </div>\n\n        </div>\n    );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}