{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/components/QuestionPanel.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\nimport \"./QuestionPanel.css\";\n\nfunction QuestionPanel() {\n  const [state, dispatch] = useStateValue();\n  const [question, setQuestion] = useState(state.topicDetails.questions[state.activeQuestion - 1]);\n\n  const updateState = () => {\n    let list = state.visitedQuestion;\n    list[parseInt(state.activeQuestion) - 1] = true;\n    dispatch({\n      type: 'SET_VISITED_QUESTIONS',\n      item: list\n    });\n    let element = document.getElementById(state.activeQuestion);\n    let userAnswer = (element.querySelector('input[name=question' + state.activeQuestion + ']:checked') || {}).value;\n\n    if (userAnswer != undefined) {\n      dispatch({\n        type: 'UPDATE_YOUR_ANSWER',\n        item: userAnswer\n      });\n    } else {\n      dispatch({\n        type: 'UPDATE_YOUR_ANSWER',\n        item: 0\n      });\n    }\n\n    if (userAnswer != undefined) {\n      dispatch({\n        type: 'UPDATE_ANSWERED_QUESTION',\n        item: true\n      });\n    } else {\n      dispatch({\n        type: 'UPDATE_ANSWERED_QUESTION',\n        item: false\n      });\n    }\n\n    let k = parseInt(state.activeQuestion) % state.topicDetails.questions.length + 1;\n    dispatch({\n      type: 'SET_ACTIVE_QUESTION',\n      item: k\n    });\n  };\n\n  const clearResponse = () => {\n    for (let i = 0; i < 4; i++) {\n      document.getElementById(state.activeQuestion + \"_\" + (parseInt(i) + 1)).checked = false;\n    }\n  };\n\n  useEffect(() => {\n    if (state.yourAnswer[state.activeQuestion - 1] == 0) {\n      for (let i = 0; i < 4; i++) {\n        document.getElementById(state.activeQuestion + \"_\" + (parseInt(i) + 1)).checked = false;\n      }\n    } else {\n      console.log(state.activeQuestion + \"_\" + state.yourAnswer[state.activeQuestion - 1]);\n      console.log(state.yourAnswer.length);\n      document.getElementById(state.activeQuestion + \"_\" + state.yourAnswer[state.activeQuestion - 1]).checked = true;\n    }\n  }, [question]);\n  useEffect(() => {\n    setQuestion(state.topicDetails.questions[state.activeQuestion - 1]);\n    return () => {};\n  }, [state.topicDetails][state.activeQuestion]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"questionPanel__header__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Question No. \", state.activeQuestion), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__header__marking\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Marks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__header__marking__digit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      background: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \" +4 \"), /*#__PURE__*/React.createElement(\"a\", {\n    style: {\n      background: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \" -1 \")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__question__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, question.text)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__question__options\",\n    id: state.activeQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, question.options.map((info, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"question\" + state.activeQuestion,\n      value: i + 1,\n      id: state.activeQuestion + \"_\" + (parseInt(i) + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, info));\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionPanel__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"questionPanel__footer__clear\",\n    onClick: clearResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Clear Response\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"questionPanel__footer__save\",\n    onClick: updateState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Save & Next\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default QuestionPanel;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/components/QuestionPanel.js"],"names":["React","useEffect","useState","useStateValue","QuestionPanel","state","dispatch","question","setQuestion","topicDetails","questions","activeQuestion","updateState","list","visitedQuestion","parseInt","type","item","element","document","getElementById","userAnswer","querySelector","value","undefined","k","length","clearResponse","i","checked","yourAnswer","console","log","background","text","options","map","info"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useStateValue} from \"../contextAPI/StateProvider\";\nimport \"./QuestionPanel.css\";\n\nfunction QuestionPanel(){\n    const [state, dispatch] = useStateValue();\n    const [question, setQuestion] = useState(state.topicDetails.questions[state.activeQuestion-1]);\n\n    const updateState = () => {\n\n        let list = state.visitedQuestion;\n        list[parseInt(state.activeQuestion) - 1] = true;\n\n        dispatch({\n            type: 'SET_VISITED_QUESTIONS',\n            item: list\n        })\n\n        let element = document.getElementById(state.activeQuestion);\n\n        let userAnswer = (element\n            .querySelector('input[name=question'+state.activeQuestion+']:checked')||{}).value;\n\n        if(userAnswer!=undefined){\n            dispatch({\n                type: 'UPDATE_YOUR_ANSWER',\n                item: userAnswer\n            });\n        }\n        else{\n            dispatch({\n                type: 'UPDATE_YOUR_ANSWER',\n                item: 0\n            });\n        }\n\n\n        if(userAnswer != undefined){\n            dispatch({\n                type:'UPDATE_ANSWERED_QUESTION',\n                item: true\n            })\n        }else{\n            dispatch({\n                type:'UPDATE_ANSWERED_QUESTION',\n                item: false\n            })\n        }\n\n        let k = (parseInt(state.activeQuestion) % state.topicDetails.questions.length)+1;\n        dispatch({\n            type: 'SET_ACTIVE_QUESTION',\n            item: k\n        });\n    }\n\n    const clearResponse = () =>{\n        for(let i = 0; i<4; i++){\n            document.getElementById(state.activeQuestion+\"_\"+(parseInt(i)+1)).checked = false;\n        }\n    }\n\n    useEffect(() => {\n        if(state.yourAnswer[state.activeQuestion-1] == 0){\n            for(let i = 0; i<4; i++){\n                document.getElementById(state.activeQuestion+\"_\"+(parseInt(i)+1)).checked = false;\n            }\n        }\n        else{\n            console.log(state.activeQuestion+\"_\"+state.yourAnswer[state.activeQuestion-1]);\n            console.log(state.yourAnswer.length);\n\n            document.getElementById(state.activeQuestion+\"_\"+state.yourAnswer[state.activeQuestion-1])\n                .checked = true;\n\n        }\n\n    }, [question])\n\n    useEffect(() =>{\n\n        setQuestion(state.topicDetails.questions[state.activeQuestion-1]);\n\n        return ()=>{}\n\n    }, [state.topicDetails][state.activeQuestion])\n\n    return(\n        <div className={\"questionPanel\"}>\n            <div className={\"questionPanel__header\"}>\n                <strong className={\"questionPanel__header__title\"}>\n                    Question No. {state.activeQuestion}\n                </strong>\n                <div className={\"questionPanel__header__marking\"}>\n                    <p>Marks</p>\n                    <div className={\"questionPanel__header__marking__digit\"}>\n                        <a style={{background: \"green\"}}> +4 </a>\n                        <a style={{background: \"red\"}}> -1 </a>\n                    </div>\n                </div>\n                {/*<div className={\"questionPanel__header__clock\"}>*/}\n                {/*    <p>Time</p>*/}\n                {/*    <div className={\"questionPanel__header__clock__time\"}>*/}\n                {/*        <p>{minute}</p>*/}\n                {/*        <a>:</a>*/}\n                {/*        <p>{second}</p>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n            </div>\n\n            <hr/>\n\n            <div className={\"questionPanel__question\"}>\n                <div className={\"questionPanel__question__text\"}>\n                    <p>{question.text}</p>\n                </div>\n                <div className={\"questionPanel__question__options\"} id={state.activeQuestion}>\n                    {\n                        question.options.map((info, i)=>{\n                            return(\n                                <div className={\"option\"}>\n                                    <input type={\"radio\"} name={\"question\"+state.activeQuestion}\n                                           value={i+1} id={state.activeQuestion+\"_\"+(parseInt(i)+1)}/>\n                                    <p>{info}</p>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n\n            <hr/>\n            <div className={\"questionPanel__footer\"}>\n                <button className=\"questionPanel__footer__clear\" onClick={clearResponse}>Clear Response</button>\n                <button className=\"questionPanel__footer__save\" onClick={updateState}>Save & Next</button>\n            </div>\n            <hr/>\n        </div>\n    );\n}\n\nexport default QuestionPanel;\n"]},"metadata":{},"sourceType":"module"}