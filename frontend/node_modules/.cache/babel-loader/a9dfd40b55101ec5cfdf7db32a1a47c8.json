{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Public/test_system_frontend/src/components/QuizFooter.js\";\nimport React from \"react\";\nimport \"./QuizFooter.css\";\nimport { setActiveQuestion, updateAnsweredQuestions, updateVisitedQuestions, updateYourAnswer } from \"../contextAPI/actions\";\nimport { useStateValue } from \"../contextAPI/StateProvider\";\n\nfunction QuizFooter() {\n  const [state, dispatch] = useStateValue();\n\n  const updateState = () => {\n    updateVisitedQuestions(parseInt(state.activeQuestion) - 1, dispatch);\n    let element = document.getElementById(state.activeQuestion);\n    let userAnswer = (element.querySelector('input[name=question' + state.activeQuestion + ']:checked') || {}).value;\n\n    if (userAnswer != undefined) {\n      updateYourAnswer(userAnswer, dispatch);\n    } else {\n      updateYourAnswer(0, dispatch);\n    }\n\n    if (userAnswer != undefined) {\n      updateAnsweredQuestions(true, dispatch);\n    } else {\n      updateAnsweredQuestions(false, dispatch);\n    }\n\n    let k = parseInt(state.activeQuestion) % state.topicDetails.questions.length + 1;\n    setActiveQuestion(k, dispatch);\n  };\n\n  const clearResponse = () => {\n    for (let i = 0; i < 4; i++) {\n      document.getElementById(state.activeQuestion + \"_\" + (parseInt(i) + 1)).checked = false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizFooter__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"quizFooter__left__clear btn btn-primary\",\n    onClick: clearResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Clear Response\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"quizFooter__left__save btn btn-primary\",\n    onClick: updateState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Save & Next\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizFooter__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Instructions\")));\n}\n\nexport default QuizFooter;","map":{"version":3,"sources":["/home/rohit/Public/test_system_frontend/src/components/QuizFooter.js"],"names":["React","setActiveQuestion","updateAnsweredQuestions","updateVisitedQuestions","updateYourAnswer","useStateValue","QuizFooter","state","dispatch","updateState","parseInt","activeQuestion","element","document","getElementById","userAnswer","querySelector","value","undefined","k","topicDetails","questions","length","clearResponse","i","checked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SACIC,iBADJ,EAEIC,uBAFJ,EAGIC,sBAHJ,EAIIC,gBAJJ,QAKO,uBALP;AAOA,SAAQC,aAAR,QAA4B,6BAA5B;;AAEA,SAASC,UAAT,GAAqB;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,aAAa,EAAvC;;AAGA,QAAMI,WAAW,GAAG,MAAM;AAEtBN,IAAAA,sBAAsB,CAACO,QAAQ,CAACH,KAAK,CAACI,cAAP,CAAR,GAAiC,CAAlC,EAAqCH,QAArC,CAAtB;AAEA,QAAII,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBP,KAAK,CAACI,cAA9B,CAAd;AAEA,QAAII,UAAU,GAAG,CAACH,OAAO,CACpBI,aADa,CACC,wBAAsBT,KAAK,CAACI,cAA5B,GAA2C,WAD5C,KAC0D,EAD3D,EAC+DM,KADhF;;AAGA,QAAGF,UAAU,IAAEG,SAAf,EAAyB;AAErBd,MAAAA,gBAAgB,CAACW,UAAD,EAAaP,QAAb,CAAhB;AAEH,KAJD,MAKI;AACAJ,MAAAA,gBAAgB,CAAC,CAAD,EAAII,QAAJ,CAAhB;AACH;;AAED,QAAGO,UAAU,IAAIG,SAAjB,EAA2B;AACvBhB,MAAAA,uBAAuB,CAAC,IAAD,EAAOM,QAAP,CAAvB;AACH,KAFD,MAEK;AACDN,MAAAA,uBAAuB,CAAC,KAAD,EAAQM,QAAR,CAAvB;AACH;;AAED,QAAIW,CAAC,GAAIT,QAAQ,CAACH,KAAK,CAACI,cAAP,CAAR,GAAiCJ,KAAK,CAACa,YAAN,CAAmBC,SAAnB,CAA6BC,MAA/D,GAAuE,CAA/E;AACArB,IAAAA,iBAAiB,CAACkB,CAAD,EAAIX,QAAJ,CAAjB;AACH,GA1BD;;AA4BA,QAAMe,aAAa,GAAG,MAAK;AACvB,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,CAAjB,EAAoBA,CAAC,EAArB,EAAwB;AACpBX,MAAAA,QAAQ,CAACC,cAAT,CAAwBP,KAAK,CAACI,cAAN,GAAqB,GAArB,IAA0BD,QAAQ,CAACc,CAAD,CAAR,GAAY,CAAtC,CAAxB,EAAkEC,OAAlE,GAA4E,KAA5E;AACH;AACJ,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,yCAAlB;AAA4D,IAAA,OAAO,EAAEF,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,wCAAlB;AAA2D,IAAA,OAAO,EAAEd,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAE,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CANJ,CADJ;AAaH;;AAED,eAAeH,UAAf","sourcesContent":["import React from \"react\";\nimport \"./QuizFooter.css\";\nimport {\n    setActiveQuestion,\n    updateAnsweredQuestions,\n    updateVisitedQuestions,\n    updateYourAnswer\n} from \"../contextAPI/actions\";\n\nimport {useStateValue} from \"../contextAPI/StateProvider\";\n\nfunction QuizFooter(){\n\n    const [state, dispatch] = useStateValue();\n\n\n    const updateState = () => {\n\n        updateVisitedQuestions(parseInt(state.activeQuestion) - 1, dispatch);\n\n        let element = document.getElementById(state.activeQuestion);\n\n        let userAnswer = (element\n            .querySelector('input[name=question'+state.activeQuestion+']:checked')||{}).value;\n\n        if(userAnswer!=undefined){\n\n            updateYourAnswer(userAnswer, dispatch);\n\n        }\n        else{\n            updateYourAnswer(0, dispatch);\n        }\n\n        if(userAnswer != undefined){\n            updateAnsweredQuestions(true, dispatch);\n        }else{\n            updateAnsweredQuestions(false, dispatch);\n        }\n\n        let k = (parseInt(state.activeQuestion) % state.topicDetails.questions.length)+1;\n        setActiveQuestion(k, dispatch);\n    }\n\n    const clearResponse = () =>{\n        for(let i = 0; i<4; i++){\n            document.getElementById(state.activeQuestion+\"_\"+(parseInt(i)+1)).checked = false;\n        }\n    }\n    return(\n        <div className={\"quizFooter\"}>\n            <div className={\"quizFooter__left\"}>\n                <button className=\"quizFooter__left__clear btn btn-primary\" onClick={clearResponse}>Clear Response</button>\n                <button className=\"quizFooter__left__save btn btn-primary\" onClick={updateState}>Save & Next</button>\n            </div>\n\n            <div className={\"quizFooter__right\"}>\n                <button className={\"btn btn-primary\"}>Instructions</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default QuizFooter;\n"]},"metadata":{},"sourceType":"module"}